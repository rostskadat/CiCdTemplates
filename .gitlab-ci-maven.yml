#
# FILE: .gitlab-ci.yml
#
# DESCRIPTION: This file sets up the CI pipeline for a Java Project.
#   It aims at implementing the oficial GitFlow workflow from the CI/CD
#   perspective.
#   It will build / analyse the project and then deploy the corresponding 
#   artifcat on the develop branch. For all feature branch it will simply
#   build the project and deploy the corresponding artifcat.
#   The workflow is slightly more complex for the release / hotfix and 
#   master branches.
#   release/*:
#   On the release branch the project is build to create a release 
#   candidate that will then be deployed in the snapshot repository. 
#   NOTE: that the last commit on that branch will not deploy due to the 
#   SNAPSHOT restrictions in the snapshot repository
#   tags:
#   Since we only tag release on the master branch 
#
# REFERENCE:
#   https://gitlab.com/gitlab-org/gitlab-ce/blob/master/lib/gitlab/ci/templates/Maven.gitlab-ci.yml
#
image: maven:3.3.9-jdk-8

variables:
  MAVEN_CLI_OPTS: "--settings .m2/settings.xml --activate-profiles CI_BUILD --batch-mode --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  #
  # The important settings here are the memory related parameter that are necesary
  #   in order for some sonar invocation not to fail with an OOM exception. The other
  #   important settings is the maven.repo.local parameter that allows caching the 
  #   different maven artifacts
  #
  #   -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.showDateTime=true
  MAVEN_OPTS: "-Xmx1536m -Xms256m -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN"

cache:
  paths:
    - .m2/repository
    - ~/.sonar/cache
    - target

before_script:
  - mkdir -p .m2/repository
  - echo '<?xml version="1.0" encoding="UTF-8"?><settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"><servers><server><id>AFBAWS</id><username>${env.ARTIFACTORY_USERNAME}</username><password>${env.ARTIFACTORY_PASSWORD}</password></server><server><id>AFBRELEASES</id><username>${env.ARTIFACTORY_USERNAME}</username><password>${env.ARTIFACTORY_PASSWORD}</password></server><server><id>AFBSNAPSHOTS</id><username>${env.ARTIFACTORY_USERNAME}</username><password>${env.ARTIFACTORY_PASSWORD}</password></server></servers><mirrors><mirror><mirrorOf>*</mirrorOf><id>AFBAWS</id><url>${env.ARTIFACTORY_URL}/repo</url></mirror></mirrors></settings>' > .m2/settings.xml

stages:
  - build
  - test
  - analysis
  - deploy

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean compile

coverage:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS clean org.jacoco:jacoco-maven-plugin:prepare-agent test
    - mvn $MAVEN_CLI_OPTS org.jacoco:jacoco-maven-plugin:prepare-agent clean test -P coverage-per-test

sonar:
  stage: analysis
  script:
    - mvn $MAVEN_CLI_OPTS -Dsonar.host=$SONAR_URL -Dsonar.login=$SONAR_USERNAME -Dsonar.password=$SONAR_PASSWORD sonar:sonar
  only:
    - develop
  allow_failure: true

deploy to artifactory:
  stage: deploy
  script:
    - echo "Deploying artifcat for $CI_PROJECT_NAME - $CI_COMMIT_REF_NAME"
    - mvn $MAVEN_CLI_OPTS package source:jar javadoc:jar deploy:deploy
  
